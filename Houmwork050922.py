import random
# 1. На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. 
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной.

# В первой строке входного файла INPUT.TXT записано натуральное число N (1 ≤ N ≤ 100)
# – число монеток. В каждой из последующих N строк содержится одно целое число – 1 если монетка лежит решкой вверх и 0 если вверх гербом.

# n = random.randint(3,17)

# lst = [random.randint(0,1) for i in range(n)]
# print(lst)

# if lst.count(1) < lst.count(0):
#     print(f"Меньше мoнет вверх решкой: {lst.count(1)}") 
# else:
#     print(f"Меньше мoнет вверх гербом {lst.count(0)}")


# ____________________________________________________________________________________________________________________________________________


# 2. Требуется посчитать сумму целых чисел, расположенных между числами 1 и N включительно.
# Входные данные
# В единственной строке входного файла INPUT.TXT записано единственное целое число N, не превышающее по абсолютной величине 104.
# Выходные данные
# В единственную строку выходного файла OUTPUT.TXT нужно вывести одно целое число — сумму чисел, расположенных между 1 и N включительно.



# n = int(input('Введите число N = '))

# print (F'{sum([i for i in range(1, n + 1)])} - суммa целых чисел, расположенных между числами 1 и {n} включительно') 



# 3.Требуется найти наименьший натуральный делитель целого числа N, отличный от 1.
# Входные данные
# Входной файл INPUT.TXT содержит целое число N (1 < N ≤ 106).

# Выходные данные
# В выходной файл OUTPUT.TXT выведите ответ на задачу.

# n = random.randint(1,106)

# lst = [i for i in range(2, n + 1) if n % i == 0]
# print(n,'- это случайное целое число N, ', min(lst), '- это наименьший делитель числа', n)



# 4. Петя впервые пришел на урок физкультуры в новой школе. Перед началом урока ученики выстраиваются по росту, в порядке невозрастания.
# Напишите программу, которая определит на какое место в шеренге Пете нужно встать, чтобы не нарушить традицию, 
# если заранее известен рост каждого ученика и эти данные уже расположены по невозрастанию 
# (то есть каждое следующее число не больше предыдущего). 
# Если в классе есть несколько учеников с таким же ростом, как у Пети, то программа должна расположить его после них.

# Входные данные
# Первая строка входного файла INPUT.TXT содержит натуральное число N (N ≤ 100) – количество учеников
# (не считая Петю). Во второй строке записаны N натуральных чисел Ai (Ai ≤ 200) – рост учеников в сантиметрах в порядке невозрастания.
# Третья строка содержит единственное натуральное число X (X ≤ 200) – рост Пети.

# Выходные данные
# В выходной файл OUTPUT.TXT выведите единственное целое число – номер Пети в шеренге учеников.

# 8
# 165 163 160 160 157 157 155 154
# 162

# 3


# n = 10
# x = random.randint(145, 200)
# growt = sorted([random.randint(145, 200) for i in range(n)], reverse=True)
# print('Рост Пети: ',x)
# result = []
# if x in growt:
#     index_x = growt.index(x)
#     growt.insert(index_x, x)
#     print(growt)
#     print('Место Пети: ',index_x + 1)
# else:
#     if x not in growt:
#         growt.append(x)
#         result = sorted(growt, reverse=True)
#         print(result)
#         print('Место Пети: ', result.index(x)+1)



# ____________________________________________________________________________________________________________________________________________


# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод
# – на i-ом кусте выросло ai ягод.

# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход,
# находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, 
# находясь перед некоторым кустом заданной во входном файле грядки.


# Входные данные
# Первая строка входного файла INPUT.TXT содержит целое число N (3 ≤ N ≤ 1000) – количество кустов черники. 
# Вторая строка содержит N целых положительных чисел a1, a2, ..., aN
# – число ягод черники, растущее на соответствующем кусте. Все ai не превосходят 1000.

# Выходные данные
# В выходной файл OUTPUT.TXT выведите ответ на задачу.


# IN
# 4
# 1 2 3 4

# OUT
# 9

# IN
# 3
# 1 2 3

# OUT
# 6

# n = random.randint(3, 51) # задаем рамдомно количество кустов, маленьки диапазон для наглядности

# v = 1000 // n #  определяем максимальное количество ягод на одном кусте

# s = [random.randint(1, v) for i in range(n)] # рамдомно генерируем количество ягод на кустах от 1 до v


# print(f"Количество кустов - {n}")
# print(s)


# max = sum(s[:3])
# for i in range(2, len(s)-1): # перебираем по три куста, находим максимальное кол-во ягод в трех кустах, начиная со второго куста
#     total = s[i-1]+s[i]+s[i+1]
#     if total > max:
#         max = total
# print(f'Максиамльное количество ягод за один заход - {max}')
# print(f"Общее количество ягод на всех кустах - {sum(s)}")

